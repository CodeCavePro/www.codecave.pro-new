{"version":3,"file":"component---src-pages-templates-index-tsx-28901076b7e855360fd9.js","mappings":"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","sources":["webpack://code-cave/./node_modules/@react-icons/all-files/ai/AiFillBug.js","webpack://code-cave/./node_modules/@react-icons/all-files/bs/BsArrowUpRight.js","webpack://code-cave/./node_modules/@react-icons/all-files/fa/FaQuoteRight.js","webpack://code-cave/./src/components/common/templateSection.tsx","webpack://code-cave/./src/components/posts/postPreview.tsx","webpack://code-cave/./src/components/projects/projectPreview.tsx","webpack://code-cave/./src/components/stack/stackCarousel.tsx","webpack://code-cave/./src/components/stack/stakUnit.tsx","webpack://code-cave/./src/components/stack/stackSection.tsx","webpack://code-cave/./src/components/posts/postSection.tsx","webpack://code-cave/./src/components/projects/projectsSection.tsx","webpack://code-cave/./src/components/reviews/review.tsx","webpack://code-cave/./src/components/reviews/staticReviewsSection.tsx","webpack://code-cave/./src/pagesTemplates/index.tsx","webpack://code-cave/./src/types/common.type.ts","webpack://code-cave/./node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.AiFillBug = function AiFillBug (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 1024 1024\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M304 280h416c4.4 0 8-3.6 8-8 0-40-8.8-76.7-25.9-108.1-17.2-31.5-42.5-56.8-74-74C596.7 72.8 560 64 520 64h-16c-40 0-76.7 8.8-108.1 25.9-31.5 17.2-56.8 42.5-74 74C304.8 195.3 296 232 296 272c0 4.4 3.6 8 8 8z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M940 512H792V412c76.8 0 139-62.2 139-139 0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 34.8-28.2 63-63 63H232c-34.8 0-63-28.2-63-63 0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 76.8 62.2 139 139 139v100H84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h148v96c0 6.5.2 13 .7 19.3C164.1 728.6 116 796.7 116 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-44.2 23.9-82.9 59.6-103.7 6 17.2 13.6 33.6 22.7 49 24.3 41.5 59 76.2 100.5 100.5 28.9 16.9 61 28.8 95.3 34.5 4.4 0 8-3.6 8-8V484c0-4.4 3.6-8 8-8h60c4.4 0 8 3.6 8 8v464.2c0 4.4 3.6 8 8 8 34.3-5.7 66.4-17.6 95.3-34.5 41.5-24.3 76.2-59 100.5-100.5 9.1-15.5 16.7-31.9 22.7-49C812.1 793.1 836 831.8 836 876c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8 0-79.3-48.1-147.4-116.7-176.7.4-6.4.7-12.8.7-19.3v-96h148c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.BsArrowUpRight = function BsArrowUpRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 16 16\",\"fill\":\"currentColor\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"fillRule\":\"evenodd\",\"d\":\"M6.5 4a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v5a.5.5 0 01-1 0V4.5H7a.5.5 0 01-.5-.5z\",\"clipRule\":\"evenodd\"}},{\"tag\":\"path\",\"attr\":{\"fillRule\":\"evenodd\",\"d\":\"M12.354 3.646a.5.5 0 010 .708l-9 9a.5.5 0 01-.708-.708l9-9a.5.5 0 01.708 0z\",\"clipRule\":\"evenodd\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaQuoteRight = function FaQuoteRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z\"}}]})(props);\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Theme } from \"../../types/common.type\";\n\nimport Border from \"../../assets/common/border.svg\";\n\nimport ContentContainer from \"./contentContainer\";\n\ninterface ITemplateSectionProps extends React.HTMLAttributes<HTMLElement> {\n  title: string;\n  theme: Theme;\n  isArrowLink?: boolean;\n  linkTitle?: string;\n  subTitle?: string;\n  section?: string;\n  className?: string;\n  borderT?: boolean;\n  borderB?: boolean;\n}\n\nconst TemplateSection = ({\n  section,\n  theme,\n  title,\n  linkTitle,\n  subTitle,\n  className,\n  children,\n  borderT,\n  borderB,\n  isArrowLink = true,\n  ...attr\n}: PropsWithChildren<ITemplateSectionProps>) => {\n  const mainColorClass =\n    theme === Theme.dark ? \"text-secondary-100\" : \"text-main-100\";\n  const linkColorClass =\n    theme === Theme.dark\n      ? \"text-secondary-100 hover:text-secondary-70\"\n      : \"text-main-100 hover:text-main-10\";\n  const bgColorClass =\n    theme === Theme.dark ? \"bg-main-100\" : \"bg-secondary-100\";\n\n  return (\n    <>\n      {borderT ? <Border className=\"w-full\" /> : null}\n      <section\n        className={`w-full py-16 ${bgColorClass} ${className}`}\n        {...attr}\n      >\n        <ContentContainer\n          maxWidthClass=\"max-w-[1280px]\"\n          className={`flex-col items-center ${mainColorClass}`}\n        >\n          <div className=\"flex justify-between w-full sm:items-center pb-8 sm:pb-14 flex-col sm:flex-row gap-5\">\n            <h2 className={`text-4xl font-bold flex-1 ${mainColorClass}`}>\n              {title.toUpperCase()}\n            </h2>\n            {section ? (\n              <Link\n                to={`/${section}`}\n                className={`w-full sm:w-auto text-start sm:text-end text-xl font-normal cursor-pointer whitespace-nowrap ${linkColorClass}`}\n              >\n                {linkTitle ? linkTitle.toUpperCase() : \"DISCOVER MORE\"}{\" \"}\n                {isArrowLink ? <>&#8594;</> : null}\n              </Link>\n            ) : null}\n            {subTitle ? (\n              <p\n                className={`w-full sm:w-auto flex-1 text-start sm:text-end text-xl font-normal ${mainColorClass}`}\n              >\n                {subTitle.toUpperCase()}\n              </p>\n            ) : null}\n          </div>\n          {children}\n        </ContentContainer>\n      </section>\n      {borderB ? <Border className=\"w-full\" /> : null}\n    </>\n  );\n};\n\nexport default TemplateSection;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { BsArrowUpRight } from \"@react-icons/all-files/bs/BsArrowUpRight\";\n\nimport { IPostPreviewQueryResult } from \"../../types/post.type\";\nimport { LocalBusinessMetadata } from \"../common/metadata\";\nimport { IBlogMarkupData } from \"../../types/commonMarkup.type\";\nimport { TLang, Theme } from \"../../types/common.type\";\n\nconst PostPreview = ({\n  post,\n  theme,\n  className,\n  markupData,\n  lang,\n}: {\n  post: IPostPreviewQueryResult;\n  className?: string;\n  theme: Theme;\n  markupData?: IBlogMarkupData;\n  lang: TLang;\n}) => {\n  const { date, title, text } = post.frontmatter;\n\n  const minutes = Math.floor(post.wordCount.words / 200);\n  const readingTime = minutes ? minutes : 1;\n\n  const fontColorClass100 =\n    theme === Theme.light ? \"text-main-100\" : \"text-secondary-100\";\n  const fontColorClass70 =\n    theme === Theme.light ? \"text-main-70\" : \"text-secondary-70\";\n  const fontColorHover =\n    theme === Theme.light ? \"hover:text-main-10\" : \"hover:text-secondary-10\";\n\n  return (\n    <Link\n      to={`/blog/${post.id}`}\n      className={`flex flex-col sm:flex-row w-full justify-center gap-5 md:gap-14 ${fontColorClass100} ${fontColorHover} ${className}`}\n      itemScope\n      itemType=\"https://schema.org/Article\"\n    >\n      <div className=\"flex flex-col w-full max-w-[400px] gap-2.5\">\n        <p itemProp=\"dateCreated\" className={`text-lg ${fontColorClass70}`}>\n          {date}\n        </p>\n        <h2\n          itemProp=\"headline\"\n          className={`text-3xl font-semibold ${fontColorClass100}`}\n        >\n          {title}\n        </h2>\n      </div>\n      <div className=\"flex flex-col w-full max-w-[500px] gap-5\">\n        <p\n          className={`font-normal text-base ${fontColorClass100}`}\n          itemProp=\"abstract\"\n        >\n          {text.split(\" \").slice(0, 70).join(\" \")}...\n        </p>\n        <div className=\"flex w-full items-center justify-between\">\n          <div className=\"flex items-center gap-3 text-sm font-bold\">\n            <span>{markupData?.readPostLink}</span>\n            <BsArrowUpRight size={14} />\n          </div>\n          <p className={`text-sm ${fontColorClass70}`}>\n            {`${markupData?.readingTimeTitle}: ~${readingTime} ${markupData?.readingTimeUnits}.`}\n          </p>\n        </div>\n      </div>\n      <LocalBusinessMetadata itemProp=\"copyrightHolder\" lang={lang} />\n    </Link>\n  );\n};\n\nexport default PostPreview;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IProjectPreviewQueryResult } from \"../../types/project.type\";\nimport { TLang, Theme } from \"../../types/common.type\";\n\nimport { BsArrowUpRight } from \"@react-icons/all-files/bs/BsArrowUpRight\";\n\nimport { LocalBusinessMetadata } from \"../common/metadata\";\n\nconst ProjectPreview = ({\n  project,\n  className,\n  theme,\n  lang,\n}: {\n  project: IProjectPreviewQueryResult;\n  className?: string;\n  theme: Theme;\n  lang: TLang;\n}) => {\n  const cover = getImage(project.frontmatter.cover);\n  const { title, teamSize, duration } = project.frontmatter;\n\n  const fontColorClass10 =\n    theme === Theme.light\n      ? \"text-main-100 hover:text-main-10\"\n      : \"text-secondary-100 hover:text-secondary-10\";\n  const bgColors =\n    theme === Theme.light\n      ? \"bg-secondary-100 hover:bg-secondary-100\"\n      : \"bg-main-100 hover:bg-main-100\";\n\n  return (\n    <Link\n      to={`/projects/${project.id}`}\n      className={`${bgColors} ${fontColorClass10} flex flex-col justify-between hover:text-main-10 rounded-2xl p-2.5 gap-2.5 ${className}`}\n      itemScope\n      itemType=\"https://schema.org/CreativeWork\"\n    >\n      <div className=\"group flex-1 relative\">\n        {cover ? (\n          <GatsbyImage\n            image={cover}\n            alt=\"cover\"\n            itemProp=\"image\"\n            className=\"object-contain w-full rounded-[10px] grayscale transition-all group-hover:scale-[1.007]\"\n          />\n        ) : null}\n        <div className=\"absolute left-2 bottom-2 flex items-center gap-2.5 z-10\">\n          <p className=\"backdrop-blur-sm backdrop-brightness-75 text-secondary-100 px-5 h-10 flex items-center rounded-lg\">\n            {duration}\n          </p>\n          <p className=\"backdrop-blur-sm backdrop-brightness-75 text-secondary-100 px-5 h-10 flex items-center rounded-lg\">\n            {teamSize}\n          </p>\n        </div>\n      </div>\n      <div className=\"flex px-2.5 py-1 items-center grow\">\n        <h2\n          className=\"text-base grow font-medium h-full\"\n          itemProp=\"description\"\n        >\n          {title}\n        </h2>\n        <BsArrowUpRight size={20} />\n      </div>\n      <LocalBusinessMetadata itemProp=\"author\" lang={lang} />\n    </Link>\n  );\n};\n\nexport default ProjectPreview;\n","import React, { forwardRef } from \"react\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nconst StackCarousel = forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<{ className?: string }>\n>(({ className, children }, ref) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 10000, align: \"start\" },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  return (\n    <div className={`overflow-hidden ${className}`} ref={emblaRef}>\n      <div\n        ref={ref}\n        className=\"h-full flex items-center\"\n        onMouseEnter={() => {\n          emblaApi?.internalEngine().animation.stop();\n        }}\n        onMouseLeave={() => {\n          emblaApi?.internalEngine().animation.start();\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n});\n\nexport default StackCarousel;\n","import React, { PropsWithChildren } from \"react\";\n\nimport Border from \"../../assets/common/border.svg\";\n\n\nconst StackUnit = ({ children }: PropsWithChildren) => {\n  return (\n    <div className=\"h-full shrink-0 min-w-0 cursor-pointer flex flex-col justify-between items-center content-center w-[192px] md:w-[256px] xl:w-[256px] 3xl:w-[400px]\">\n      <Border className={`min-w-0 shrink-0 w-full`} />\n      <p className=\"text-lg font-semibold whitespace-nowrap\">{children}</p>\n      <Border className={`min-w-0 shrink-0 w-full`} />\n    </div>\n  );\n};\n\nexport default StackUnit;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { AiFillBug } from \"@react-icons/all-files/ai/AiFillBug\";\n\nimport StackCarousel from \"./stackCarousel\";\nimport StackUnit from \"./stakUnit\";\n\nconst StackSection = () => {\n  const techData = useStaticQuery(query);\n  const techArr = techData?.markdownRemark?.frontmatter?.stack as\n    | string[]\n    | null;\n\n  return (\n    <>\n      {techArr ? (\n        <section className={`h-16 flex flex-col relative`}>\n          <StackCarousel className=\"grow\">\n            {techArr.map((tech) => (\n              <StackUnit key={tech}>{tech}</StackUnit>\n            ))}\n            <StackUnit>\n              <AiFillBug size={32} className=\"-rotate-90\" />\n            </StackUnit>\n          </StackCarousel>\n        </section>\n      ) : null}\n    </>\n  );\n};\n\nexport default StackSection;\n\nexport const query = graphql`\n  query {\n    markdownRemark(fields: { sourceName: { eq: \"stack\" } }) {\n      frontmatter {\n        stack\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport {\n  IBlogSectionQueryResult,\n  IPostPreviewQueryResult,\n} from \"../../types/post.type\";\n\nimport PostPreview from \"./postPreview\";\nimport TemplateSection from \"../common/templateSection\";\nimport { ILang, Theme } from \"../../types/common.type\";\n\nconst PostSection = ({ lang }: ILang) => {\n  const postData = useStaticQuery(query) as IBlogSectionQueryResult;\n\n  const sectionMarkup = postData?.markupData?.nodes?.find(\n    (node) => node.fields.language === lang\n  )?.frontmatter?.blog;\n\n  let post: IPostPreviewQueryResult | null | undefined;\n\n  if (lang in postData)\n    post = postData?.[lang]?.nodes?.[0] as IPostPreviewQueryResult | null;\n  else post = postData?.en?.nodes?.[0];\n\n  return (\n    <>\n      {post ? (\n        <TemplateSection\n          theme={Theme.dark}\n          title={sectionMarkup?.blogSectionTitle ?? \"new in our blog\"}\n          linkTitle={sectionMarkup?.blogSectionLinkTitle ?? \"all posts\"}\n          section=\"blog\"\n          borderB\n          className=\"min-h-[400px]\"\n        >\n          <PostPreview\n            lang={lang}\n            post={post}\n            theme={Theme.dark}\n            markupData={sectionMarkup}\n          />\n        </TemplateSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostSection;\n\nexport const query = graphql`\n  query {\n    en: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"posts\" }, language: { eq: \"en\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 1\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"DD MMM YYYY\", locale: \"en\")\n          title\n          text\n        }\n        wordCount {\n          words\n        }\n      }\n    }\n    ru: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"posts\" }, language: { eq: \"ru\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 1\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"DD MMM YYYY\", locale: \"ru\")\n          title\n          text\n        }\n        wordCount {\n          words\n        }\n      }\n    }\n    markupData: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          blog {\n            bannerTitle\n            head\n            readPostLink\n            readingTimeTitle\n            readingTimeUnits\n            postFooterTitle\n            postFooterText\n            blogSectionTitle\n            blogSectionLinkTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport {\n  IProjectPreviewQueryResult,\n  IProjectSectionQueryResult,\n} from \"../../types/project.type\";\n\nimport ProjectPreview from \"./projectPreview\";\nimport TemplateSection from \"../common/templateSection\";\nimport { ILang, Theme } from \"../../types/common.type\";\n\ninterface IProjectsSectionProps extends ILang {\n  excludeId?: string;\n}\n\nconst ProjectsSection = ({ excludeId, lang }: IProjectsSectionProps) => {\n  const projectsPreviewData = useStaticQuery(\n    query\n  ) as IProjectSectionQueryResult;\n\n  const sectionMarkup = projectsPreviewData?.markupData?.nodes?.find(\n    (node) => node.fields.language === lang\n  )?.frontmatter?.projects;\n\n  let projects: IProjectPreviewQueryResult[] | null | undefined;\n  if (lang in projectsPreviewData)\n    projects = projectsPreviewData?.[lang]?.nodes as\n      | IProjectPreviewQueryResult[]\n      | null\n      | undefined;\n  else projects = projectsPreviewData.en?.nodes;\n\n  if (!projects) return <></>;\n\n  if (excludeId) {\n    projects = projects.filter((project) => project.id !== excludeId);\n  }\n\n  return (\n    <TemplateSection\n      theme={Theme.dark}\n      section=\"projects\"\n      title={sectionMarkup?.moreProjectsSectionTitle ?? \"OUR PROJECTS\"}\n      linkTitle={sectionMarkup?.moreProjectsSectionLinkTitle ?? \"Discover MORE\"}\n      borderB\n    >\n      <div className=\"flex justify-between items-center gap-5 lg:gap-10 flex-col sm:flex-row items-stretch\">\n        {projects.map((project, i) => {\n          if (i === 3) return;\n          return (\n            <ProjectPreview\n              key={project.id}\n              project={project}\n              lang={lang}\n              theme={Theme.light}\n              className=\"flex-1 sm:last:hidden lg:last:flex\"\n            />\n          );\n        })}\n      </div>\n    </TemplateSection>\n  );\n};\n\nexport default ProjectsSection;\n\nexport const query = graphql`\n  {\n    en: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"projects\" }, language: { eq: \"en\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 4\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          teamSize\n          duration\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 400\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n    ru: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"projects\" }, language: { eq: \"ru\" } }\n      }\n      sort: { frontmatter: { date: DESC } }\n      limit: 4\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          teamSize\n          duration\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 400\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n    markupData: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          projects {\n            moreProjectsSectionTitle\n            moreProjectsSectionLinkTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IReviewQueryResult } from \"../../types/review.type\";\n\nimport { FaQuoteRight } from \"@react-icons/all-files/fa/FaQuoteRight\";\n\nconst Review = ({\n  review: {\n    frontmatter: { company, person, position, location, image },\n    html,\n  },\n  className,\n}: {\n  review: IReviewQueryResult;\n  className?: string;\n}) => {\n  const avatar = getImage(image);\n\n  return (\n    <div\n      className={`flex flex-col p-6 gap-3.5 bg-secondary-100 hover:shadow-[0px_2px_14px_rgba(68,68,68,0.25)] shadow-[0px_2px_8px_rgba(68,68,68,0.1)] rounded-2.5xl text-main-100 ${className}`}\n    >\n      <div className=\"flex w-full items-start\">\n        {avatar ? (\n          <GatsbyImage\n            image={avatar}\n            alt={company}\n            className=\"h-[72px] w-[72px] object-cover rounded-full mr-3.5\"\n          />\n        ) : null}\n        <div className=\"flex-1 font-normal text-base text-main-70 leading-5\">\n          <h3 className=\"font-bold text-xl text-main-100\">{person}</h3>\n          <h4>\n            <span>{position}</span>, <span>{company}</span>\n          </h4>\n          <h4>{location}</h4>\n        </div>\n        <FaQuoteRight size={25} color=\"#E4E4E4\" />\n      </div>\n      <div\n        className=\"review-body text-sm\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </div>\n\n    // <div className=\"h-full flex flex-col grow p-8 text-main-100\">\n    //   <div className=\"mb-6 flex flex-nowrap justify-start items-center border-b-[4px] border-dashed border-secondary-100 gradient-border pb-10\">\n    //     <div\n    //       className={`inline-block rounded-full h-32 w-32 flex items-center mr-10`}\n    //     >\n    //       {avatar ? (\n    //         <GatsbyImage\n    //           image={avatar}\n    //           alt={company}\n    //           className=\"h-full object-cover rounded-full h-32 w-32\"\n    //         />\n    //       ) : null}\n    //     </div>\n    //     <div>\n    //       <h3 className=\"text-xl font-extrabold whitespace-nowrap\">{person}</h3>\n    //       <span className=\"hidden\">{person}</span>\n    //       <h4 className=\"text-xl font-extrabold whitespace-nowrap\">\n    //         <span>{position}</span>, <span>{company}</span>\n    //       </h4>\n    //       <h4 className=\"text-xl font-extrabold whitespace-nowrap\">\n    //         {location}\n    //       </h4>\n    //     </div>\n    //   </div>\n    //   <div\n    //     className=\"review-body shrink-0 text-2xl\"\n    //     dangerouslySetInnerHTML={{ __html: html }}\n    //   />\n    // </div>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { ILang, Theme } from \"../../types/common.type\";\nimport {\n  IReviewQueryResult,\n  IReviewSectionQueryResult,\n} from \"../../types/review.type\";\n\nimport TemplateSection from \"../common/templateSection\";\nimport Review from \"./review\";\n\nconst StaticReviewsSection = ({ lang }: ILang) => {\n  const reviewsData = useStaticQuery(query) as IReviewSectionQueryResult;\n\n  const sectionMarkup = reviewsData?.markupData?.nodes?.find(\n    (node) => node.fields.language === lang\n  )?.frontmatter?.reviews;\n\n  let reviews: IReviewQueryResult[] | null | undefined;\n\n  if (lang in reviewsData)\n    reviews = reviewsData?.[lang]?.nodes?.sort((a, b) =>\n      a.frontmatter.person > b.frontmatter.person ? 1 : -1\n    ) as IReviewQueryResult[] | null | undefined;\n  else\n    reviews = reviewsData?.en?.nodes?.sort((a, b) =>\n      a.frontmatter.person > b.frontmatter.person ? 1 : -1\n    );\n\n  return (\n    <>\n      {reviews ? (\n        <TemplateSection\n          id=\"reviews\"\n          theme={Theme.light}\n          title={sectionMarkup?.title ?? \"our clients' testimonials\"}\n          subTitle={sectionMarkup?.linkTitle}\n          borderB\n        >\n          <div className=\"flex justify-between items-start gap-5 lg:gap-10 flex-col md:flex-row\">\n            {reviews.map((review) => (\n              <Review review={review} key={review.id} className=\"flex-1\" />\n            ))}\n          </div>\n        </TemplateSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default StaticReviewsSection;\n\nexport const query = graphql`\n  query {\n    en: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"reviews\" }, language: { eq: \"en\" } }\n      }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          company\n          location\n          person\n          position\n          image {\n            childImageSharp {\n              gatsbyImageData(\n                height: 112\n                placeholder: BLURRED\n                formats: [AUTO, AVIF, WEBP]\n              )\n            }\n          }\n        }\n      }\n    }\n    ru: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"reviews\" }, language: { eq: \"ru\" } }\n      }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          company\n          location\n          person\n          position\n          image {\n            childImageSharp {\n              gatsbyImageData(\n                height: 112\n                placeholder: BLURRED\n                formats: [AUTO, AVIF, WEBP]\n              )\n            }\n          }\n        }\n      }\n    }\n    markupData: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          reviews {\n            title\n            linkTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport type { HeadFC, HeadProps, PageProps } from \"gatsby\";\n\nimport { IconContext } from \"@react-icons/all-files\";\nimport \"../styles/styles.css\";\n\nimport { IIndexPageContext } from \"../types/index.type\";\n\nimport Banner from \"../components/common/banner\";\nimport StackSection from \"../components/stack/stackSection\";\nimport PostSection from \"../components/posts/postSection\";\nimport ProjectsSection from \"../components/projects/projectsSection\";\nimport { HeadSeo } from \"../components/common/metadata\";\nimport StaticReviewsSection from \"../components/reviews/staticReviewsSection\";\nimport ContactFormSection from \"../components/forms/contactFormSection\";\n\nconst IndexPage = ({\n  pageContext: { markupData, lang },\n}: PageProps<null, IIndexPageContext>) => {\n  return (\n    <IconContext.Provider value={{ style: { verticalAlign: \"middle\" } }}>\n      <Banner title={markupData.bannerTitle} babylon />\n      <StackSection />\n      <ProjectsSection lang={lang} />\n      <StaticReviewsSection lang={lang} />\n      <PostSection lang={lang} />\n      <ContactFormSection lang={lang} />\n    </IconContext.Provider>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC<null, IIndexPageContext> = ({\n  pageContext: { markupData, site, lang },\n  location,\n}: HeadProps<null, IIndexPageContext>) => {\n  return (\n    <HeadSeo\n      title={markupData.head}\n      description={markupData.metaDescription}\n      siteUrl={site.siteUrl}\n      path={location.pathname}\n      lang={lang}\n    />\n  );\n};\n","export interface ILang {\n  lang: TLang;\n}\n\nexport type TLang = \"en\" | \"ru\";\n\nexport type TLinks = \"services\" | \"workflow\" | \"projects\" | \"blog\";\n\nexport interface IBasePageContext extends ILang {\n  site: ISiteMetadata;\n}\n\nexport interface IMdQueryResult<T extends object> {\n  allMarkdownRemark: {\n    nodes: T[];\n  };\n}\n\nexport interface ISiteMetadata {\n  title: string;\n  description: string;\n  siteUrl: string;\n  image: string;\n  analyticsId: string;\n}\n\nexport enum Theme {\n  dark = \"dark\",\n  light = \"light\",\n}\n","const defaultOptions = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null\n};\n\nfunction Autoplay(userOptions = {}) {\n  let options;\n  let emblaApi;\n  let destroyed;\n  let playing = false;\n  let resume = true;\n  let jump = false;\n  let timer = 0;\n  function init(emblaApiInstance, optionsHandler) {\n    emblaApi = emblaApiInstance;\n    const {\n      mergeOptions,\n      optionsAtMedia\n    } = optionsHandler;\n    const optionsBase = mergeOptions(defaultOptions, Autoplay.globalOptions);\n    const allOptions = mergeOptions(optionsBase, userOptions);\n    options = optionsAtMedia(allOptions);\n    if (emblaApi.scrollSnapList().length <= 1) return;\n    jump = options.jump;\n    destroyed = false;\n    const {\n      eventStore,\n      ownerDocument\n    } = emblaApi.internalEngine();\n    const emblaRoot = emblaApi.rootNode();\n    const root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;\n    const container = emblaApi.containerNode();\n    emblaApi.on('pointerDown', stopTimer);\n    if (!options.stopOnInteraction) {\n      emblaApi.on('pointerUp', startTimer);\n    }\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', () => {\n        resume = false;\n        stopTimer();\n      });\n      if (!options.stopOnInteraction) {\n        eventStore.add(root, 'mouseleave', () => {\n          resume = true;\n          startTimer();\n        });\n      }\n    }\n    if (options.stopOnFocusIn) {\n      eventStore.add(container, 'focusin', stopTimer);\n      if (!options.stopOnInteraction) {\n        eventStore.add(container, 'focusout', startTimer);\n      }\n    }\n    eventStore.add(ownerDocument, 'visibilitychange', visibilityChange);\n    if (options.playOnInit && !documentIsHidden()) startTimer();\n  }\n  function destroy() {\n    emblaApi.off('pointerDown', stopTimer).off('pointerUp', startTimer);\n    stopTimer();\n    destroyed = true;\n    playing = false;\n  }\n  function startTimer() {\n    if (destroyed) return;\n    if (!resume) return;\n    if (!playing) emblaApi.emit('autoplay:play');\n    const {\n      ownerWindow\n    } = emblaApi.internalEngine();\n    ownerWindow.clearInterval(timer);\n    timer = ownerWindow.setInterval(next, options.delay);\n    playing = true;\n  }\n  function stopTimer() {\n    if (destroyed) return;\n    if (playing) emblaApi.emit('autoplay:stop');\n    const {\n      ownerWindow\n    } = emblaApi.internalEngine();\n    ownerWindow.clearInterval(timer);\n    timer = 0;\n    playing = false;\n  }\n  function visibilityChange() {\n    if (documentIsHidden()) {\n      resume = playing;\n      return stopTimer();\n    }\n    if (resume) startTimer();\n  }\n  function documentIsHidden() {\n    const {\n      ownerDocument\n    } = emblaApi.internalEngine();\n    return ownerDocument.visibilityState === 'hidden';\n  }\n  function play(jumpOverride) {\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride;\n    resume = true;\n    startTimer();\n  }\n  function stop() {\n    if (playing) stopTimer();\n  }\n  function reset() {\n    if (playing) play();\n  }\n  function isPlaying() {\n    return playing;\n  }\n  function next() {\n    const {\n      index\n    } = emblaApi.internalEngine();\n    const nextIndex = index.clone().add(1).get();\n    const lastIndex = emblaApi.scrollSnapList().length - 1;\n    const kill = options.stopOnLastSnap && nextIndex === lastIndex;\n    if (kill) stopTimer();\n    if (emblaApi.canScrollNext()) {\n      emblaApi.scrollNext(jump);\n    } else {\n      emblaApi.scrollTo(0, jump);\n    }\n  }\n  const self = {\n    name: 'autoplay',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  };\n  return self;\n}\nAutoplay.globalOptions = undefined;\n\nexport { Autoplay as default };\n//# sourceMappingURL=embla-carousel-autoplay.esm.js.map\n"],"names":["GenIcon","module","exports","props","_ref","section","theme","title","linkTitle","subTitle","className","children","borderT","borderB","isArrowLink","attr","mainColorClass","Theme","dark","linkColorClass","bgColorClass","___EmotionJSX","React","Border","_extends","ContentContainer","maxWidthClass","toUpperCase","Link","to","post","markupData","lang","date","text","frontmatter","minutes","Math","floor","wordCount","words","readingTime","fontColorClass100","light","fontColorClass70","fontColorHover","id","itemScope","itemType","itemProp","split","slice","join","readPostLink","BsArrowUpRight","size","readingTimeTitle","readingTimeUnits","LocalBusinessMetadata","project","cover","getImage","teamSize","duration","fontColorClass10","bgColors","GatsbyImage","image","alt","forwardRef","ref","emblaRef","emblaApi","useEmblaCarousel","loop","dragFree","align","Autoplay","delay","stopOnInteraction","stopOnMouseEnter","onMouseEnter","internalEngine","animation","stop","onMouseLeave","start","StackSection","_techData$markdownRem","_techData$markdownRem2","techData","useStaticQuery","query","techArr","markdownRemark","stack","StackCarousel","map","tech","StackUnit","key","AiFillBug","_postData$markupData","_postData$markupData$","_postData$markupData$2","_postData$markupData$3","_postData$lang","_postData$lang$nodes","_postData$en","_postData$en$nodes","_sectionMarkup$blogSe","_sectionMarkup$blogSe2","postData","sectionMarkup","nodes","find","node","fields","language","blog","en","TemplateSection","blogSectionTitle","blogSectionLinkTitle","PostPreview","_projectsPreviewData$","_projectsPreviewData$2","_projectsPreviewData$3","_projectsPreviewData$4","_projectsPreviewData$5","_projectsPreviewData$6","_sectionMarkup$morePr","_sectionMarkup$morePr2","excludeId","projectsPreviewData","projects","filter","moreProjectsSectionTitle","moreProjectsSectionLinkTitle","i","ProjectPreview","review","company","person","position","location","html","avatar","FaQuoteRight","color","dangerouslySetInnerHTML","__html","_reviewsData$markupDa","_reviewsData$markupDa2","_reviewsData$markupDa3","_reviewsData$markupDa4","_reviewsData$lang","_reviewsData$lang$nod","_reviewsData$en","_reviewsData$en$nodes","_sectionMarkup$title","reviewsData","reviews","sort","a","b","Review","pageContext","IconContext","Provider","value","style","verticalAlign","Banner","bannerTitle","babylon","ProjectsSection","StaticReviewsSection","PostSection","ContactFormSection","Head","_ref2","site","HeadSeo","head","description","metaDescription","siteUrl","path","pathname","defaultOptions","active","breakpoints","jump","playOnInit","stopOnFocusIn","stopOnLastSnap","rootNode","userOptions","options","destroyed","playing","resume","timer","startTimer","emit","ownerWindow","clearInterval","setInterval","next","stopTimer","visibilityChange","documentIsHidden","ownerDocument","visibilityState","play","jumpOverride","index","nextIndex","clone","add","get","lastIndex","scrollSnapList","length","canScrollNext","scrollNext","scrollTo","name","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","eventStore","emblaRoot","root","container","containerNode","on","destroy","off","reset","isPlaying","undefined"],"sourceRoot":""}